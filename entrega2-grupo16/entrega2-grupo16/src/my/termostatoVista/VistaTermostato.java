/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package my.termostatoVista;

import java.awt.CardLayout;
import java.awt.Font;
import java.awt.font.TextAttribute;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Iterator;
import java.util.Map;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JSpinner.DefaultEditor;
import javax.swing.SwingUtilities;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import my.termostatoModelo.*;
/**
 *
 * @author migchav,jhocaba,ernperi
 */
public class VistaTermostato extends javax.swing.JFrame {

    
    
    private ControladorTerm control;
    private Modelo modelo;
    private JPanel panelNuevo = new javax.swing.JPanel(new CardLayout());  //Panel para los modos editar y manual.
    
    
    
    private ArrayList<javax.swing.JToggleButton> botonesHoras=new ArrayList();
    
    /**
     * Creates new form VistaUI 
     * Vista principal del programa con la interfaz inicial deseada
     */
    public VistaTermostato(Modelo model) {
        initComponents();
        modelo=model;
        control=new ControladorTerm(this,modelo);
        
        String minutos=String.valueOf(modelo.getMinutos());
        
        if(modelo.getMinutos()<10) minutos="0"+modelo.getMinutos();
        
        hora.setText(modelo.getHora()+":"+minutos);
        panelHoras.setBorder(BorderFactory.createEmptyBorder(12, 30, 12, 30));    
        panelComboBox.setBorder(BorderFactory.createEmptyBorder(20, 20, 0, 30)); 
        panelBotones.setBorder(BorderFactory.createEmptyBorder(10, 60, 10, 60));
        
        Iterator<String> iterador= modelo.getProgramas().iterator();
        while(iterador.hasNext()){
            boxPrograma.addItem(iterador.next());
           // System.out.println(iterador.next());
        }
        numeroSemana();
        addBotonesHoras();
        cambiarMenusHoras();
        hacerPanelEditar();
        hacerPanelManual();
    }

    
    /**
     * Agrupa en un arraylist los botones de elección de los intervalos de horas.
     */
    private void addBotonesHoras(){
        botonesHoras.add(botonHora1);
        botonesHoras.add(botonHora2);
        botonesHoras.add(botonHora3);
        botonesHoras.add(botonHora4);
        botonesHoras.add(botonHora5);
        botonesHoras.add(botonHora6);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botonesGenerales = new javax.swing.ButtonGroup();
        panelInfo = new javax.swing.JPanel();
        panelDias = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        btInicio = new javax.swing.JButton();
        lunes = new javax.swing.JLabel();
        martes = new javax.swing.JLabel();
        miercoles = new javax.swing.JLabel();
        jueves = new javax.swing.JLabel();
        viernes = new javax.swing.JLabel();
        sabado = new javax.swing.JLabel();
        domingo = new javax.swing.JLabel();
        panelInfoDia = new javax.swing.JPanel();
        panelHora = new javax.swing.JPanel();
        hora = new javax.swing.JLabel();
        panelTemperatura = new javax.swing.JPanel();
        temperatura = new javax.swing.JLabel();
        panelProgramas = new javax.swing.JPanel();
        panelEleccionPrograma = new javax.swing.JPanel();
        panelTextPrograma = new javax.swing.JPanel();
        textoPrograma = new javax.swing.JLabel();
        panelIcono = new javax.swing.JPanel();
        botonLoading = new javax.swing.JButton();
        panelComboBox = new javax.swing.JPanel();
        boxPrograma = new javax.swing.JComboBox<>();
        panelHoras = new javax.swing.JPanel();
        botonHora1 = new javax.swing.JToggleButton();
        botonHora2 = new javax.swing.JToggleButton();
        botonHora3 = new javax.swing.JToggleButton();
        botonHora4 = new javax.swing.JToggleButton();
        botonHora5 = new javax.swing.JToggleButton();
        botonHora6 = new javax.swing.JToggleButton();
        panelBotones = new javax.swing.JPanel();
        botonEncender = new javax.swing.JToggleButton();
        botonManual = new javax.swing.JToggleButton();
        botonAutomatico = new javax.swing.JToggleButton();
        botonEditar = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(560, 370));
        setPreferredSize(new java.awt.Dimension(600, 430));

        panelInfo.setBackground(new java.awt.Color(255, 255, 255));
        panelInfo.setLayout(new java.awt.GridLayout(0, 1));

        panelDias.setBackground(new java.awt.Color(255, 255, 255));
        panelDias.setLayout(new java.awt.GridLayout(1, 0, -10, 0));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        btInicio.setBackground(new java.awt.Color(255, 255, 255));
        btInicio.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btInicio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/inicio.png"))); // NOI18N
        btInicio.setText("INICIO");
        btInicio.setFocusable(false);
        btInicio.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btInicio.setIconTextGap(0);
        btInicio.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btInicioActionPerformed(evt);
            }
        });
        jPanel1.add(btInicio);

        panelDias.add(jPanel1);

        lunes.setBackground(new java.awt.Color(255, 255, 255));
        lunes.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lunes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lunes.setText("Lunes");
        lunes.setEnabled(false);
        panelDias.add(lunes);

        martes.setBackground(new java.awt.Color(255, 255, 255));
        martes.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        martes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        martes.setText("Martes");
        martes.setEnabled(false);
        martes.setMaximumSize(new java.awt.Dimension(29, 14));
        martes.setMinimumSize(new java.awt.Dimension(29, 14));
        martes.setPreferredSize(new java.awt.Dimension(29, 14));
        panelDias.add(martes);

        miercoles.setBackground(new java.awt.Color(255, 255, 255));
        miercoles.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        miercoles.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        miercoles.setText("Miércoles");
        miercoles.setEnabled(false);
        miercoles.setMaximumSize(new java.awt.Dimension(29, 14));
        miercoles.setMinimumSize(new java.awt.Dimension(29, 14));
        miercoles.setPreferredSize(new java.awt.Dimension(29, 14));
        panelDias.add(miercoles);

        jueves.setBackground(new java.awt.Color(255, 255, 255));
        jueves.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jueves.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jueves.setText("Jueves");
        jueves.setEnabled(false);
        jueves.setMaximumSize(new java.awt.Dimension(29, 14));
        jueves.setMinimumSize(new java.awt.Dimension(29, 14));
        jueves.setPreferredSize(new java.awt.Dimension(29, 14));
        panelDias.add(jueves);

        viernes.setBackground(new java.awt.Color(255, 255, 255));
        viernes.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        viernes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        viernes.setText("Viernes");
        viernes.setEnabled(false);
        viernes.setMaximumSize(new java.awt.Dimension(29, 14));
        viernes.setMinimumSize(new java.awt.Dimension(29, 14));
        viernes.setPreferredSize(new java.awt.Dimension(29, 14));
        panelDias.add(viernes);

        sabado.setBackground(new java.awt.Color(255, 255, 255));
        sabado.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        sabado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sabado.setText("Sábado");
        sabado.setEnabled(false);
        sabado.setMaximumSize(new java.awt.Dimension(29, 14));
        sabado.setMinimumSize(new java.awt.Dimension(29, 14));
        sabado.setPreferredSize(new java.awt.Dimension(29, 14));
        panelDias.add(sabado);

        domingo.setBackground(new java.awt.Color(255, 255, 255));
        domingo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        domingo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        domingo.setText("Domingo");
        domingo.setEnabled(false);
        domingo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        domingo.setMaximumSize(new java.awt.Dimension(29, 14));
        domingo.setMinimumSize(new java.awt.Dimension(29, 14));
        domingo.setPreferredSize(new java.awt.Dimension(29, 14));
        panelDias.add(domingo);

        panelInfo.add(panelDias);

        panelInfoDia.setBackground(new java.awt.Color(255, 255, 255));
        panelInfoDia.setLayout(new java.awt.GridLayout(1, 0));

        panelHora.setBackground(new java.awt.Color(255, 255, 255));
        panelHora.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        hora.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        hora.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        hora.setEnabled(false);
        panelHora.add(hora);

        panelInfoDia.add(panelHora);

        panelTemperatura.setBackground(new java.awt.Color(255, 255, 255));
        panelTemperatura.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        temperatura.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        temperatura.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        temperatura.setText("19ºC");
        temperatura.setEnabled(false);
        panelTemperatura.add(temperatura);

        panelInfoDia.add(panelTemperatura);

        panelInfo.add(panelInfoDia);

        getContentPane().add(panelInfo, java.awt.BorderLayout.PAGE_START);

        panelProgramas.setLayout(new java.awt.GridLayout(0, 1));

        panelEleccionPrograma.setLayout(new java.awt.GridLayout(1, 0));

        panelTextPrograma.setBackground(new java.awt.Color(255, 255, 255));
        panelTextPrograma.setLayout(new java.awt.GridLayout(1, 0, 0, 10));

        textoPrograma.setBackground(new java.awt.Color(255, 255, 255));
        textoPrograma.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        textoPrograma.setText("Programa actual:");
        textoPrograma.setEnabled(false);
        panelTextPrograma.add(textoPrograma);

        panelEleccionPrograma.add(panelTextPrograma);

        panelIcono.setBackground(new java.awt.Color(255, 255, 255));
        panelIcono.setLayout(new java.awt.CardLayout());

        botonLoading.setBackground(new java.awt.Color(255, 255, 255));
        botonLoading.setForeground(new java.awt.Color(240, 240, 240));
        botonLoading.setBorderPainted(false);
        botonLoading.setContentAreaFilled(false);
        botonLoading.setDefaultCapable(false);
        botonLoading.setEnabled(false);
        botonLoading.setFocusPainted(false);
        botonLoading.setFocusable(false);
        panelIcono.add(botonLoading, "card2");

        panelEleccionPrograma.add(panelIcono);

        panelComboBox.setBackground(new java.awt.Color(255, 255, 255));
        panelComboBox.setLayout(new java.awt.GridLayout(1, 0));

        boxPrograma.setBackground(new java.awt.Color(240, 240, 240));
        boxPrograma.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        boxPrograma.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        boxPrograma.setEnabled(false);
        boxPrograma.setMaximumSize(new java.awt.Dimension(200, 50));
        boxPrograma.setMinimumSize(new java.awt.Dimension(50, 20));
        boxPrograma.setPreferredSize(new java.awt.Dimension(150, 50));
        boxPrograma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxProgramaActionPerformed(evt);
            }
        });
        panelComboBox.add(boxPrograma);

        panelEleccionPrograma.add(panelComboBox);

        panelProgramas.add(panelEleccionPrograma);

        panelHoras.setBackground(new java.awt.Color(255, 255, 255));
        panelHoras.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        panelHoras.setLayout(new java.awt.GridLayout(1, 0));

        botonHora1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botonHora1.setText("0-3");
        botonHora1.setEnabled(false);
        botonHora1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonHora1.setMaximumSize(new java.awt.Dimension(70, 32));
        botonHora1.setMinimumSize(new java.awt.Dimension(50, 22));
        botonHora1.setPreferredSize(new java.awt.Dimension(50, 22));
        botonHora1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonHora1ActionPerformed(evt);
            }
        });
        panelHoras.add(botonHora1);

        botonHora2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botonHora2.setText("4-7");
        botonHora2.setEnabled(false);
        botonHora2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonHora2.setMaximumSize(new java.awt.Dimension(70, 32));
        botonHora2.setMinimumSize(new java.awt.Dimension(50, 22));
        botonHora2.setPreferredSize(new java.awt.Dimension(50, 22));
        botonHora2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonHora2ActionPerformed(evt);
            }
        });
        panelHoras.add(botonHora2);

        botonHora3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botonHora3.setText("8-11");
        botonHora3.setEnabled(false);
        botonHora3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonHora3.setMaximumSize(new java.awt.Dimension(70, 32));
        botonHora3.setMinimumSize(new java.awt.Dimension(50, 22));
        botonHora3.setPreferredSize(new java.awt.Dimension(50, 22));
        botonHora3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonHora3ActionPerformed(evt);
            }
        });
        panelHoras.add(botonHora3);

        botonHora4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botonHora4.setText("12-15");
        botonHora4.setEnabled(false);
        botonHora4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonHora4.setMaximumSize(new java.awt.Dimension(70, 32));
        botonHora4.setMinimumSize(new java.awt.Dimension(50, 22));
        botonHora4.setPreferredSize(new java.awt.Dimension(50, 22));
        botonHora4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonHora4ActionPerformed(evt);
            }
        });
        panelHoras.add(botonHora4);

        botonHora5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botonHora5.setText("16-19");
        botonHora5.setEnabled(false);
        botonHora5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonHora5.setMaximumSize(new java.awt.Dimension(70, 32));
        botonHora5.setMinimumSize(new java.awt.Dimension(50, 22));
        botonHora5.setPreferredSize(new java.awt.Dimension(50, 22));
        botonHora5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonHora5ActionPerformed(evt);
            }
        });
        panelHoras.add(botonHora5);

        botonHora6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botonHora6.setText("20-23");
        botonHora6.setEnabled(false);
        botonHora6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonHora6.setMaximumSize(new java.awt.Dimension(70, 32));
        botonHora6.setMinimumSize(new java.awt.Dimension(50, 22));
        botonHora6.setPreferredSize(new java.awt.Dimension(50, 22));
        botonHora6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonHora6ActionPerformed(evt);
            }
        });
        panelHoras.add(botonHora6);

        panelProgramas.add(panelHoras);

        getContentPane().add(panelProgramas, java.awt.BorderLayout.CENTER);

        panelBotones.setBackground(new java.awt.Color(255, 255, 255));
        panelBotones.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1), javax.swing.BorderFactory.createCompoundBorder()));
        panelBotones.setLayout(new java.awt.GridLayout(1, 0));

        botonEncender.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/iconoEncender.png"))); // NOI18N
        botonEncender.setPreferredSize(new java.awt.Dimension(80, 35));
        botonEncender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEncenderActionPerformed(evt);
            }
        });
        panelBotones.add(botonEncender);

        botonesGenerales.add(botonManual);
        botonManual.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botonManual.setText("Manual");
        botonManual.setEnabled(false);
        botonManual.setPreferredSize(new java.awt.Dimension(90, 35));
        botonManual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonManualActionPerformed(evt);
            }
        });
        panelBotones.add(botonManual);

        botonesGenerales.add(botonAutomatico);
        botonAutomatico.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botonAutomatico.setText("Automático");
        botonAutomatico.setEnabled(false);
        botonAutomatico.setPreferredSize(new java.awt.Dimension(90, 35));
        botonAutomatico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAutomaticoActionPerformed(evt);
            }
        });
        panelBotones.add(botonAutomatico);

        botonesGenerales.add(botonEditar);
        botonEditar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botonEditar.setText("Editar");
        botonEditar.setEnabled(false);
        botonEditar.setPreferredSize(new java.awt.Dimension(90, 35));
        botonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEditarActionPerformed(evt);
            }
        });
        panelBotones.add(botonEditar);

        getContentPane().add(panelBotones, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Método para obtener del sistema el día de la semana en el que estamos y realiza el
     * posterior subrayado del día.
     */
    private void numeroSemana(){
        int numero=modelo.getDiaSemana();

        JLabel label;
        switch(numero)
        {
            case 1: label=domingo;
            break;

            case 2: label=lunes;
            break;

            case 3: label=martes;
            break;

            case 4: label=miercoles; 
            break;

            case 5: label=jueves;
            break;

            case 6: label=viernes;
            break;

            case 7: label=sabado;
            break;
            default:label=lunes;
        }
        

        Font font = label.getFont();
        Map attributes = font.getAttributes();
        attributes.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        label.setFont(font.deriveFont(attributes));
            
    }
    
    /**
     * Método para obtener del sistema la hora actual y mostrarla por el panel.
     * @return string en formato hh:mm 
     
    private String obtenerHora(){
        LocalDateTime locaDate= LocalDateTime.now();        
        int hours=locaDate.getHour();
        String minutes=String.valueOf(locaDate.getMinute());
        if(Integer.parseInt(minutes)<10) minutes="0"+minutes;
        return(hours+":"+minutes);
    }
    */
    /**
     * Ejecuta la acción de llamar a control.procesaHoraPulsada(0) tras el evento de haber sido pulsado.
     * El 0 del argumento viene porque es el indice del array que lo contiene en el modelo.
     * @param evt - El evento de pulsación
     */
    private void botonHora1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonHora1ActionPerformed
        control.procesaHoraPulsada(0);
    }//GEN-LAST:event_botonHora1ActionPerformed

    /**
     * Ejecuta la acción de llamar a control.modoManual() que gestiona todo lo relativo tras 
     * la pulsación del botón del modo manual.
     * @param evt 
     */
    private void botonManualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonManualActionPerformed
        control.modoManual();
    }//GEN-LAST:event_botonManualActionPerformed

    /**
     * Ejecuta la acción de llamar a control que gestiona todo lo relativo tras 
     * la pulsación del botón del modo manual. Este puede dividirse en dos casos:El caso de
     * inicio que esta el termostato en modo off o cuando esté en modo on nos sirve de botón de parar
     * @param evt 
     */
    private void botonEncenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEncenderActionPerformed
        if(botonManual.isEnabled()){        // Si los botones de los modos estan activos => apagamos pantalla  
            control.apagarPantalla();
        }
        else{                              // Sino encendemos pantalla 
            control.encenderPantalla();          
        }
    }//GEN-LAST:event_botonEncenderActionPerformed

    /**
     * Ejecuta la acción de llamar a control.modoAutomatico() que gestiona todo lo relativo tras 
     * la pulsación del botón del modo automatico.
     * @param evt 
     */
    private void botonAutomaticoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAutomaticoActionPerformed
        control.modoAutomatico();    
    }//GEN-LAST:event_botonAutomaticoActionPerformed

    /**
     * Carga la vista para el modo automatico.
     */
    public void botonesAutomatico(){
        botonLoading.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/iconoAutomatico.png")));
        botonLoading.setEnabled(true);
        textoPrograma.setText("Programa actual: "+obtenerPrograma());
    }
    
    /**
     * Obtiene el programa automático que este seleccionado.
     * @return  String del programa seleccionado.
     */
    public String obtenerPrograma(){
        return (String) boxPrograma.getSelectedItem();
    }
    
    /**
     * Ejecuta la acción de llamar a control.procesaCambioPrograma() que gestiona todo lo relativo tras 
     * la selección de un determinado programa.
     * @param evt 
     */
    private void boxProgramaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxProgramaActionPerformed
        control.procesaCambioPrograma();
        if(botonAutomatico.isSelected()) control.cambioTextoAutomatico(); //Si el modo automatico esta seleccionado tambien hay que cambiar el texto del programa actual
        if(botonEditar.isSelected())   setTemperaturas();  //Si el boton de editar está activo y se cambia el programa mientras tanto, debemos obtener del modelo las temperaturas para dicho programa.
    }//GEN-LAST:event_boxProgramaActionPerformed

    /**
     * Ejecuta la acción de llamar a control.modoEdicion() que gestiona todo lo relativo tras 
     * la pulsación del modo editar.
     * @param evt 
     */
    private void botonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEditarActionPerformed
        control.modoEdicion();
    }//GEN-LAST:event_botonEditarActionPerformed

    /**
     * Ejecuta las acciones necesarias para adaptar la vista al modo edición. Muestra además el cardLayout de edición 
     * y actualiza la vista.
     */
    public void botonesEdicion(){
        botonHora1.setEnabled(true);
        botonHora2.setEnabled(true);
        botonHora3.setEnabled(true);
        botonHora4.setEnabled(true);
        botonHora5.setEnabled(true);
        botonHora6.setEnabled(true);
        botonLoading.setIcon(null);
        textoPrograma.setText("Programa actual:");
        panelProgramas.add(panelNuevo);
        CardLayout cl = (CardLayout)(panelNuevo.getLayout());
        cl.show(panelNuevo, "PANEL_EDITAR");
        panelProgramas.updateUI();
    }
    
     /**
     * Ejecuta la acción de llamar a control.procesaHoraPulsada(1) tras el evento de haber sido pulsado.
     * El 1 del argumento viene porque es el indice del array que lo contiene en el modelo.
     * @param evt - El evento de pulsación
     */
    private void botonHora2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonHora2ActionPerformed
        control.procesaHoraPulsada(1);
    }//GEN-LAST:event_botonHora2ActionPerformed

     /**
     * Ejecuta la acción de llamar a control.procesaHoraPulsada(2) tras el evento de haber sido pulsado.
     * El 2 del argumento viene porque es el indice del array que lo contiene en el modelo.
     * @param evt - El evento de pulsación
     */
    private void botonHora3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonHora3ActionPerformed
        control.procesaHoraPulsada(2);
    }//GEN-LAST:event_botonHora3ActionPerformed

     /**
     * Ejecuta la acción de llamar a control.procesaHoraPulsada(3) tras el evento de haber sido pulsado.
     * El 3 del argumento viene porque es el indice del array que lo contiene en el modelo.
     * @param evt - El evento de pulsación
     */
    private void botonHora4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonHora4ActionPerformed
        control.procesaHoraPulsada(3);
    }//GEN-LAST:event_botonHora4ActionPerformed

     /**
     * Ejecuta la acción de llamar a control.procesaHoraPulsada(4) tras el evento de haber sido pulsado.
     * El 4 del argumento viene porque es el indice del array que lo contiene en el modelo.
     * @param evt - El evento de pulsación
     */
    private void botonHora5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonHora5ActionPerformed
        control.procesaHoraPulsada(4);
    }//GEN-LAST:event_botonHora5ActionPerformed

     /**
     * Ejecuta la acción de llamar a control.procesaHoraPulsada(5) tras el evento de haber sido pulsado.
     * El 5 del argumento viene porque es el indice del array que lo contiene en el modelo.
     * @param evt - El evento de pulsación
     */
    private void botonHora6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonHora6ActionPerformed
        control.procesaHoraPulsada(5);
    }//GEN-LAST:event_botonHora6ActionPerformed

    private void btInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btInicioActionPerformed
        control.procesaNavegaInicio();
    }//GEN-LAST:event_btInicioActionPerformed

    /**
     * Ejecuta las acciones necesarias para adaptar la vista al modo automatico.
     */
    public void actualizarBotonesAutomatico(){
        botonHora1.setEnabled(false);
        botonHora2.setEnabled(false);
        botonHora3.setEnabled(false);
        botonHora4.setEnabled(false);
        botonHora5.setEnabled(false);
        botonHora6.setEnabled(false);
        
    }
    
    /**
     * Muestra el Cardlayout referido al modo manual y actualiza la vista.
     */
    public void crearPanelManual(){
        panelProgramas.add(panelNuevo);
        CardLayout cl = (CardLayout)(panelNuevo.getLayout());
        cl.show(panelNuevo, "PANEL_MANUAL");
        panelProgramas.updateUI();
        
        textoPrograma.setText("Programa actual:");
        botonLoading.setIcon(null);
    }
    
    /**
     * Para el modo automático eliminamos el panel de la vista y la actualizamos. 
     */
    public void eliminarPanel(){
        panelProgramas.remove(panelNuevo);
        panelProgramas.updateUI();
    }

    /**
     * Ejecuta las acciones necesarias para adaptar la vista al modo de la pantalla
     * según si esta está off u on.
     * @param booleano - indica si debe estar habilitado o no los componentes.
     */
    public void actualizarBotonesManual(boolean booleano){
            botonManual.setEnabled(booleano);
            botonAutomatico.setEnabled(booleano);
            botonEditar.setEnabled(booleano);
            boxPrograma.setEnabled(booleano);
            textoPrograma.setEnabled(booleano);
            lunes.setEnabled(booleano);
            martes.setEnabled(booleano);
            miercoles.setEnabled(booleano);
            jueves.setEnabled(booleano);
            viernes.setEnabled(booleano);
            sabado.setEnabled(booleano);
            domingo.setEnabled(booleano);
            hora.setEnabled(booleano);
            temperatura.setEnabled(booleano);
            botonHora1.setEnabled(false);
            botonHora2.setEnabled(false);
            botonHora3.setEnabled(false);
            botonHora4.setEnabled(false);
            botonHora5.setEnabled(false);
            botonHora6.setEnabled(false);
            botonesGenerales.clearSelection();
            botonLoading.setIcon(null);
            
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton botonAutomatico;
    private javax.swing.JToggleButton botonEditar;
    private javax.swing.JToggleButton botonEncender;
    private javax.swing.JToggleButton botonHora1;
    private javax.swing.JToggleButton botonHora2;
    private javax.swing.JToggleButton botonHora3;
    private javax.swing.JToggleButton botonHora4;
    private javax.swing.JToggleButton botonHora5;
    private javax.swing.JToggleButton botonHora6;
    private javax.swing.JButton botonLoading;
    private javax.swing.JToggleButton botonManual;
    private javax.swing.ButtonGroup botonesGenerales;
    private javax.swing.JComboBox<String> boxPrograma;
    private javax.swing.JButton btInicio;
    private javax.swing.JLabel domingo;
    private javax.swing.JLabel hora;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel jueves;
    private javax.swing.JLabel lunes;
    private javax.swing.JLabel martes;
    private javax.swing.JLabel miercoles;
    private javax.swing.JPanel panelBotones;
    private javax.swing.JPanel panelComboBox;
    private javax.swing.JPanel panelDias;
    private javax.swing.JPanel panelEleccionPrograma;
    private javax.swing.JPanel panelHora;
    private javax.swing.JPanel panelHoras;
    private javax.swing.JPanel panelIcono;
    private javax.swing.JPanel panelInfo;
    private javax.swing.JPanel panelInfoDia;
    private javax.swing.JPanel panelProgramas;
    private javax.swing.JPanel panelTemperatura;
    private javax.swing.JPanel panelTextPrograma;
    private javax.swing.JLabel sabado;
    private javax.swing.JLabel temperatura;
    private javax.swing.JLabel textoPrograma;
    private javax.swing.JLabel viernes;
    // End of variables declaration//GEN-END:variables
    
    //BOTON MANUAL VARIABLES DECLARACIÓN
    private javax.swing.JLabel textHora= new javax.swing.JLabel();
    private javax.swing.JSpinner numHorasManual=new javax.swing.JSpinner();
    private javax.swing.JButton botonIniciar= new javax.swing.JButton();
    
    
    //BOTON EDITAR VARIABLES DECLARACIÓN
    private javax.swing.JLabel textMinima= new javax.swing.JLabel();
    private javax.swing.JSpinner tempMinima=new javax.swing.JSpinner();
    private javax.swing.JLabel textMaxima= new javax.swing.JLabel();
    private javax.swing.JSpinner tempMaxima=new javax.swing.JSpinner();
    
    /**
     * Crea un panel para el modo manual según las especificaciones y lo añade como Cardlayout
     */
    private void hacerPanelManual() {
        JPanel panelManual = new javax.swing.JPanel();
        panelManual.setBackground(new java.awt.Color(255, 255, 255));
        
        textHora.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        textHora.setText("Horas: ");
        panelManual.add(textHora);

        
        numHorasManual.setMaximumSize(new java.awt.Dimension(10, 10));
        numHorasManual.setMinimumSize(new java.awt.Dimension(10, 10));
        numHorasManual.setPreferredSize(new java.awt.Dimension(50, 50));
        numHorasManual.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        ((DefaultEditor) numHorasManual.getEditor()).getTextField().setEditable(false);
        panelManual.add(numHorasManual);

        
        botonIniciar.setText("Iniciar");
        botonIniciar.addActionListener(new java.awt.event.ActionListener() { //Evento de pulsación en el botón de iniciar.
        public void actionPerformed(java.awt.event.ActionEvent evt) {
        botonIniciarActionPerformed(evt);
    }
    });
        panelManual.add(botonIniciar);
        panelNuevo.add(panelManual,"PANEL_MANUAL");
    }
    
    /**
     * Ejecuta la llamada a control.inicioModoAutomatico() que nos trata todos los asuntos referidos a la 
     * pulsación del botón iniciar.
     * @param evt 
     */
    private void botonIniciarActionPerformed(java.awt.event.ActionEvent evt) {                                               
        control.inicioModoManual();
    }  
    
    /**
     * Nos muestra en la vista el icono automatico
     */
    public void ponerIconAutomatico(){
        botonLoading.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/iconoLoading.png")));
        botonLoading.setEnabled(true);
    }
    
    /**
     * Crea un panel para el modo editar según las especificaciones y lo añade como Cardlayout
     */
    private void hacerPanelEditar() {
        //panelNuevo.setLayout(new java.awt.GridLayout(0, 1));
        JPanel panelEditar = new javax.swing.JPanel();
        panelEditar.setBackground(new java.awt.Color(255, 255, 255));
        
        textMinima.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        textMinima.setText("Mínima: ");
        panelEditar.add(textMinima);

        
        tempMinima.setMaximumSize(new java.awt.Dimension(10, 10));
        tempMinima.setMinimumSize(new java.awt.Dimension(10, 10));
        tempMinima.setPreferredSize(new java.awt.Dimension(50, 50));
        ((DefaultEditor) tempMinima.getEditor()).getTextField().setEditable(false);
        panelEditar.add(tempMinima);
        
        tempMinima.addChangeListener(new ChangeListener() { //Evento de pulsación en el jspinneer de temperatura minima

        @Override
        public void stateChanged(ChangeEvent e) {
            control.procesaTemperaturaMinima();
        }
    });

        
        textMaxima.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        textMaxima.setText("Máxima: ");
        panelEditar.add(textMaxima);

        
        tempMaxima.setMaximumSize(new java.awt.Dimension(10, 10));
        tempMaxima.setMinimumSize(new java.awt.Dimension(10, 10));
        tempMaxima.setPreferredSize(new java.awt.Dimension(50, 50));
        
        ((DefaultEditor) tempMaxima.getEditor()).getTextField().setEditable(false);
        panelEditar.add(tempMaxima);
        
        setTemperaturas();
        
        tempMaxima.addChangeListener(new ChangeListener() { //Evento de pulsación en el jspinneer de temperatura maxima

        @Override
        public void stateChanged(ChangeEvent e) {
            control.procesaTemperaturaMaxima();
        }
    });
    
  
        panelEditar.add(tempMaxima);
        panelNuevo.add(panelEditar,"PANEL_EDITAR");
        
    }
    
     /**
     * Setter de la temperaturas del jspinner
     */
     public void setTemperaturas(){
         setTempMinima(modelo.getTemperaturas(modelo.obtenerClave(obtenerPrograma()))[0]);
         setTempMaxima(modelo.getTemperaturas(modelo.obtenerClave(obtenerPrograma()))[1]);
     }

    /**
     * Getter de la temperatura Minima del jspinner
     * @return int con la temperatura minima
     */
    public int getTemperaturaMinima(){
        return (Integer)tempMinima.getValue();
    }
    
    /**
     * Getter de la temperatura Maxima del jspinner
     * @return int con la temperatura maxima
     */
    public int getTemperaturaMaxima(){
        return (Integer)tempMaxima.getValue();
    }
    
    /**
     * Muestra en la vista las franjas horarias seleccionadas en cada uno de los programas.
     */
    public void cambiarMenusHoras() {
       ArrayList <Boolean> resultado=modelo.getHorarios(modelo.obtenerClave(obtenerPrograma()));
       for(int i =0; i<botonesHoras.size();i++){
           botonesHoras.get(i).setSelected(resultado.get(i));
           
       }
       
    }

    
    /**
     * Setter de la temperatura Minima del jspinner
     * @param int con la temperatura  minima
     */
    public void setTempMinima(int temperatura) {
        tempMinima.setValue(temperatura);
    }
    
    /**
     * Setter de la temperatura Maxima del jspinner
     * @param int con la temperatura maxima
     */
     public void setTempMaxima(int temperatura) {
        tempMaxima.setValue(temperatura);
    }
     

    
}
